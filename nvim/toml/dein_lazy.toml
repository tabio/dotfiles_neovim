# 必ずしも起動時に必要でないプラグインは利用条件と共にこっちに記述
# on_ft: 特定のファイルタイプで読み込む
# on_i:  インサートモードに入ったら読み込む
# on_source: 対象のプラグインを読み込んだら一緒に読み込む

[[plugins]]
repo = 'Shougo/neocomplete.vim'
on_i = 1
hook_add = '''
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#min_keyword_length = 3
let g:neocomplete#enable_auto_delimiter = 1
let g:neocomplete#auto_completion_start_length = 1
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
  " 候補選択後Enterで改行しないように
  return pumvisible() ? "\<C-y>" : "\<CR>"
endfunction
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
'''

[[plugins]]
repo     = 'Shougo/unite.vim'
hook_add = '''
let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable =1
let g:unite_source_file_mru_limit = 200
nnoremap <silent> ,uy :<C-u>Unite history/yank<CR>
nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
nnoremap <silent> ,uu :<C-u>Unite file_mru buffer<CR>
'''

[[plugins]]
repo      = 'Shougo/neomru.vim'
on_source = ['unite.vim']

